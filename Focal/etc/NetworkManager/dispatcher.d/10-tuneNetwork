#!/usr/bin/bash

#
# bash.sh - DevOpsBroker script for tuning network devices
#
# Copyright (C) 2020 Edward Smith <edwardsmith@devopsbroker.org>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
# -----------------------------------------------------------------------------
# Developed on Ubuntu 20.04 LTS running kernel.osrelease = 5.4.0-37
#
# -----------------------------------------------------------------------------
#

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Robustness ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

set -o errexit                 # Exit if any statement returns a non-true value
set -o nounset                 # Exit if use an uninitialised variable
set -o pipefail                # Exit if any statement in a pipeline returns a non-true value

################################## Variables ##################################

## Bash exec variables
EXEC_NETTUNER=/usr/local/bin/nettuner
EXEC_SPEED_TEST=/usr/bin/speedtest-cli

## Options
IFACE="$1"
ACTION="$2"

## Variables
MAC_ADDR=""
MD5SUM=""
TUNER_FILE=""
FIREWALL_FILE=""

################################### Actions ###################################

if [ "$ACTION" == "up" ]; then
	MAC_ADDR="$(/usr/sbin/arp -n -a $IP4_GATEWAY | /usr/bin/awk '{print $4}')"
	MD5SUM="$(echo \"$MAC_ADDR\" | /usr/bin/md5sum)"
	TUNER_FILE="20-tune-${IFACE}-${MD5SUM:0:8}"

	# Create a subdirectory for the network interface name for the firewall script
	if [ ! -d /etc/nftables/$IFACE ]; then
		/usr/bin/mkdir --mode=0755 /etc/nftables/$IFACE
		/usr/bin/chown root:root /etc/nftables/$IFACE
		/usr/bin/chmod 0755 /etc/nftables/$IFACE
	fi

	# Create tuning script for the given network
	if [ ! -f /etc/NetworkManager/dispatcher.d/$TUNER_FILE ]; then

		# ------------------------ Network Information ------------------------

		# Gather Internet Download and Upload speeds
		$EXEC_SPEED_TEST | /usr/bin/tee /tmp/speedtest.info
		INET_DL_SPEED=$(/usr/bin/awk '/Download:/{ print $2 }' /tmp/speedtest.info)
		INET_UL_SPEED=$(/usr/bin/awk '/Upload:/{ print $2 }' /tmp/speedtest.info)

		# Create network tuning script
		$EXEC_NETTUNER -d $INET_DL_SPEED -u $INET_UL_SPEED -m $MAC_ADDR $IFACE > /etc/NetworkManager/dispatcher.d/$TUNER_FILE
		/usr/bin/chown root:root /etc/NetworkManager/dispatcher.d/$TUNER_FILE
		/usr/bin/chmod 0755 /etc/NetworkManager/dispatcher.d/$TUNER_FILE

		# Create private network firewall script if not a wireless network
		if [[ "${IFACE}" != w* ]]; then
			FIREWALL_FILE="firewall-${MD5SUM:0:8}.nft"
			/etc/nftables/nftables-private.sh $IFACE > /etc/nftables/$IFACE/$FIREWALL_FILE
			/usr/bin/chown root:root /etc/nftables/$IFACE/$FIREWALL_FILE
			/usr/bin/chmod 0755 /etc/nftables/$IFACE/$FIREWALL_FILE
		fi

		# Call new network tuning script
		/usr/bin/bash /etc/NetworkManager/dispatcher.d/$TUNER_FILE $IFACE $ACTION

		/usr/bin/rm /tmp/speedtest.info
	fi
fi
